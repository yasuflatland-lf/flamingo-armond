services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - node_modules_volume:/app/node_modules
    command: sh -c "pnpm run start"
    ports:
      - "5173:5173"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NODE_ENV=development
      
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
      - "1323:1323"
    environment:
      - PG_HOST=database
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - PG_DBNAME=${PG_DBNAME}
      - PG_PORT=${PG_PORT}
      - PG_SSLMODE=${PG_SSLMODE}
    depends_on:
      database:
        condition: service_healthy

  database:
    image: postgres:16
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DBNAME}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init_db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${PG_DBNAME} -U ${PG_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      
volumes:
  db_data:
  node_modules_volume:
